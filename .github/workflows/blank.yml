name: Android CI

on: [push]

env:
  GITHUB_TOKEN: ${{ secrets.TOKEN }}
  RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}
  RELESE_PASSCODE: ${{ secrets.RELESE_PASSCODE }} 
  GITHUB_RELEASE_ID: ${{ github.event.release.id }}
  GITHUB_RELEASE_DRAFT: ${{ github.event.release.draft }}
jobs:
  android-ci:
    runs-on: ubuntu-latest
    container: code0987/android-ci:latest
    steps:
      - uses: actions/checkout@v1
      #- name: Build
       # run: |
       #   npm install
       #   export GRADLE_USER_HOME=`pwd`.gradle
        #  chmod +x ./gradlew
         # ./gradlew build
          #./gradlew assembleGreenRelease
      #- name: upload to release
       # run: |
        #  chmod +x ./upload-to-release
         # ./upload-to-release app/build/outputs/apk/green/release/app-green-release-unsigned.apk application/vnd.android.package-archive
      - name: restore release keystore
        run: |
            apt-get install -y apksigner
            export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools
            echo "${{ secrets.RELEASE_TOKEN }}" > release.keystore.asc
            gpg -d --passphrase "${{ secrets.RELESE_PASSCODE }}" --batch release.keystore.asc > release.keystore
            ls
            pwd
            #jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore /__w/Tusky/Tusky/release.keystore /__w/Tusky/Tusky/app-green-release-unsigned.apk ${{ secrets.RELEASE_ALIAS }} -storepass ${{ secrets.RELESE_PASSCODE }}
            apksigner sign --ks release.keystore --ks-key-alias ${{ secrets.RELEASE_ALIAS }} --ks-pass ${{ secrets.RELESE_PASSCODE }} --key-pass ${{ secrets.RELESE_PASSCODE }} --in app-green-release-unsigned.apk --out app-green-release-signed.apk
            #ls
            #zipalign -v 4 /__w/Tusky/Tusky/app-green-release-unsigned.apk /__w/Tusky/Tusky/app-green-release-signed.apk
            apksigner verify /__w/Tusky/Tusky/app-green-release-signed.apk
            ls
